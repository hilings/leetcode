package main

import (
	"sort"
)

type MyCalendarThree struct {
	Books [][][]int
	M     map[int]int // time points
	Mkeys []int       // keys of map
}

// func Constructor() MyCalendarThree {
// 	mc := MyCalendarThree{
// 		Books: [][][]int{},
// 		M:     map[int]int{},
// 		Mkeys: []int{},
// 	}
// 	return mc
// }

func (this *MyCalendarThree) Book(start int, end int) int {
	for i := len(this.Books) - 1; i >= 0; i-- {
		kBooks := this.Books[i]
		for j := len(kBooks) - 1; j >= 0; j-- {
			b := kBooks[j]
			if end > b[0] && start < b[1] {
				if i+1 == len(this.Books) { // upgrade
					this.Books = append(this.Books, [][]int{})
				}
				ol := overlap(b[0], b[1], start, end)
				this.Books[i+1] = append(this.Books[i+1], ol)

			}
		}
	}
	if len(this.Books) == 0 {
		this.Books = append(this.Books, [][]int{})
	}
	this.Books[0] = append(this.Books[0], []int{start, end})
	return len(this.Books)
}

func overlap(start1 int, end1 int, start2 int, end2 int) []int {
	start, end := start1, end1
	if start1 < start2 {
		start = start2
	}
	if end1 > end2 {
		end = end2
	}

	return []int{start, end}
}

func (this *MyCalendarThree) Book2(start int, end int) int {
	for _, ts := range []int{start, end} {
		if _, ok := this.M[ts]; !ok {
			this.Mkeys = append(this.Mkeys, ts)
		}
	}
	sort.Ints(this.Mkeys)

	this.M[start]++
	this.M[end]--

	k := 0
	ol := 0
	for _, ts := range this.Mkeys {
		ol += this.M[ts]
		if ol > k {
			k = ol
		}
	}
	return k
}

/**
 * Your MyCalendarThree object will be instantiated and called as such:
 * obj := Constructor();
 * param_1 := obj.Book(start,end);
 */
// func main() {
// 	fmt.Printf("LeetCode 732. My Calendar III ...\n\n")

// 	mc := Constructor()
// 	books := [][]int{
// 		{10, 20},
// 		{50, 60},
// 		{10, 40},
// 		{5, 15},
// 		{5, 10},
// 		{25, 55},
// 	}

// 	// books = [][]int{{255908, 290015}, {379489, 415139}, {952737, 989736}, {731845, 756565}, {356621, 387970}, {866931, 902238}, {604133, 629337}, {815192, 850236}, {419368, 456372}, {821889, 858847}, {542006, 567555}, {245751, 265998}, {613471, 645892}, {189667, 229142}, {993602, 1000000}, {334136, 371768}, {389717, 416923}, {356598, 394867}, {591871, 620778}, {303878, 330250}, {46961, 76382}, {337354, 358854}, {883717, 906310}, {235566, 274735}, {877213, 899725}, {419800, 440855}, {156339, 179832}, {860817, 894449}, {353467, 377704}, {64941, 99781}, {751555, 776179}, {325776, 355605}, {95371, 128173}, {335221, 370096}, {438836, 478190}, {976222, 1000000}, {987059, 1000000}, {501006, 537323}, {612426, 634860}, {989167, 1000000}, {401180, 429961}, {422496, 446991}, {221143, 251599}, {982041, 1000000}, {425427, 458161}, {632508, 668696}, {393209, 416098}, {852015, 878418}, {271156, 295062}, {288705, 311124}, {558006, 592244}, {126251, 156280}, {403127, 442646}, {550129, 587670}, {278777, 310814}, {602303, 635477}, {699601, 734177}, {3924, 35178}, {124366, 164045}, {47147, 71693}, {571919, 604562}, {286526, 315287}, {489398, 519441}, {597745, 631967}, {80148, 102534}, {859491, 890941}, {967278, 999263}, {358830, 385250}, {703345, 740087}, {988089, 1000000}, {618210, 639611}, {394754, 423943}, {880703, 909680}, {892653, 914751}, {429642, 458492}, {298783, 331890}, {744751, 772899}, {30170, 59051}, {301726, 341328}, {201509, 240278}, {588080, 624447}, {529848, 555554}, {384848, 405695}, {788451, 816909}, {681249, 711077}, {967554, 994890}, {394065, 425598}, {25313, 49539}, {777903, 799996}, {488530, 513501}, {84604, 122637}, {16512, 47604}, {690659, 723624}, {463391, 496485}, {102418, 127115}, {744558, 779060}, {425383, 449226}, {897505, 923901}, {70522, 93191}, {454098, 477176}, {211411, 235397}, {802699, 822704}, {324547, 362293}, {864496, 886503}, {384162, 418360}, {167950, 197517}, {127934, 166356}, {686328, 713452}, {158441, 183186}, {812091, 841505}, {212817, 242010}, {571359, 597404}, {645560, 675708}, {740269, 771282}, {78886, 110837}, {801468, 840787}, {764237, 787927}, {722026, 746567}, {681217, 708620}, {740263, 777267}, {913899, 944397}, {789121, 823548}, {176875, 209096}, {922, 39298}, {911502, 936795}, {808870, 834636}, {873856, 906227}, {89306, 110941}, {199379, 232520}, {31372, 61859}, {724865, 745109}, {68835, 97169}, {814360, 840387}, {198758, 226094}, {456087, 492093}, {340384, 361184}, {654430, 685623}, {395799, 432608}, {18262, 40592}, {735562, 759676}, {263036, 287790}, {773390, 812523}, {18361, 50647}, {269713, 305426}, {963021, 987564}, {997293, 1000000}, {973895, 1000000}, {151321, 183146}, {497936, 529165}, {418494, 456729}, {392973, 425127}, {6517, 26642}, {911805, 943440}, {123330, 156575}, {365689, 397120}, {743584, 768584}, {553183, 589874}, {727470, 759082}, {575428, 597345}, {125547, 152039}, {536133, 568560}, {769931, 797236}, {360442, 390458}, {127174, 163456}, {799965, 839060}, {158713, 197670}, {765822, 793049}, {226319, 247976}, {481655, 514010}, {455149, 478164}, {784078, 813070}, {56509, 91456}, {279622, 319237}, {729488, 749986}, {398888, 423837}, {711129, 743250}, {81539, 102510}, {36879, 60070}, {982957, 1000000}, {581345, 616593}, {924945, 952512}, {680674, 703841}, {795754, 833584}, {368579, 405114}, {836256, 873137}, {119520, 157056}, {945341, 980632}, {309427, 343886}, {151114, 179338}, {418568, 450532}, {266030, 294345}, {400024, 427352}, {484826, 514886}, {886224, 918102}, {211612, 246523}, {328488, 360162}, {967237, 997553}, {208318, 246538}, {760817, 785447}, {403341, 424786}, {901195, 935179}, {555878, 584820}, {217539, 256600}, {338375, 370552}, {342815, 371424}, {996661, 1000000}, {731434, 752240}, {714416, 737912}, {116779, 147455}, {791798, 827537}, {749834, 778812}, {571457, 605852}, {911161, 944861}, {360362, 394972}, {820608, 854970}, {401541, 427074}, {987935, 1000000}, {388984, 426106}, {727001, 756943}, {685927, 711866}, {830687, 867247}, {240841, 271141}, {990615, 1000000}, {619836, 651475}, {624578, 663060}, {27648, 58926}, {39150, 78386}, {400166, 439072}, {258833, 296165}, {865691, 892066}, {694191, 726418}, {376959, 401385}, {953831, 991671}, {626089, 665108}, {118264, 151868}, {740896, 777539}, {42709, 63603}, {382096, 410079}, {983417, 1000000}, {96947, 117917}, {702504, 722862}, {230405, 257732}, {790229, 823160}, {79386, 100184}, {583411, 604267}, {313674, 343812}, {854891, 885888}, {413483, 434995}, {675133, 701199}, {346321, 375761}, {825092, 857484}, {664927, 703306}, {90648, 121482}, {624776, 655555}, {985424, 1000000}, {698636, 737841}, {854058, 894024}, {514390, 538912}, {276640, 315347}, {171721, 210270}, {415110, 435707}, {786300, 809731}, {691911, 727806}, {141190, 170657}, {387335, 425296}, {982663, 1000000}, {736057, 760336}, {809553, 829787}, {801473, 828025}, {918904, 944108}, {618285, 642151}, {609171, 640781}, {603104, 633115}, {304031, 326928}, {260692, 298542}, {730284, 765136}, {449335, 470274}, {915427, 951034}, {160449, 188285}, {168168, 195007}, {580834, 606462}, {1460, 33929}, {898125, 936111}, {183304, 221687}, {5319, 27971}, {385449, 418959}, {507863, 545248}, {370593, 396134}, {979550, 1000000}, {488108, 517771}, {643899, 674171}, {109763, 132605}, {284028, 320832}, {303370, 332782}, {984759, 1000000}, {21039, 43689}, {848837, 873683}, {833810, 862326}, {277981, 316182}, {922585, 957966}, {979595, 1000000}, {798002, 837426}, {891375, 929143}, {836174, 867597}, {787562, 808127}, {168930, 203069}, {759775, 790860}, {910822, 945505}, {896381, 934207}, {480801, 513782}, {300732, 326782}, {552013, 573802}, {312173, 342060}, {680047, 718033}, {53509, 76659}, {159041, 184943}, {745482, 766244}, {201560, 228334}, {787879, 812722}, {571245, 599830}, {903879, 926974}, {325111, 348835}, {514214, 550486}, {448753, 472823}, {478382, 509521}, {857633, 882984}, {11978, 35714}, {155169, 179678}, {925172, 958995}, {226468, 262744}, {986633, 1000000}, {959166, 998424}, {776782, 797844}, {727292, 762232}, {621015, 650023}, {78361, 106190}, {87829, 123611}, {724493, 745547}, {742390, 780688}, {607133, 640551}, {507652, 527869}, {218677, 244628}, {602816, 635208}, {365981, 400322}, {11824, 37588}, {309948, 332988}, {276288, 308871}, {398117, 433643}, {815403, 854966}, {628520, 651355}, {365222, 386834}, {733744, 756151}, {225700, 258977}, {554847, 580348}, {596174, 622492}, {172648, 197239}, {293467, 320516}, {1403, 36726}, {443085, 480344}, {862643, 886311}, {365358, 404064}, {557252, 584355}, {364816, 388918}, {787944, 815820}, {697701, 727954}, {515789, 538824}, {190576, 212214}, {332027, 367936}, {154369, 188431}, {585823, 609218}, {708096, 745104}, {480851, 511181}, {159434, 195312}, {209577, 234350}, {595842, 625188}, {996050, 1000000}, {106012, 144173}, {287887, 311404}, {127069, 163716}, {232369, 270627}, {390768, 426822}, {189735, 212853}, {68607, 107858}, {606623, 642292}, {194904, 216156}, {916887, 944606}, {582124, 603195}, {445468, 485104}, {22225, 57258}, {547753, 585842}, {281970, 316101}, {776808, 801792}, {476428, 496904}, {506257, 544743}, {660641, 683584}, {11417, 38582}, {304648, 340464}, {252950, 285979}, {158366, 195146}}

// 	// for _, b := range books {
// 	// 	fmt.Printf("+[%d, %d]\n", b[0], b[1])
// 	// 	r := mc.Book(b[0], b[1])
// 	// 	fmt.Printf("%d\n", r)
// 	// 	for i, kb := range mc.Books {
// 	// 		fmt.Printf("k = %d, %v\n", i+1, kb)
// 	// 	}
// 	// 	fmt.Printf("\n")
// 	// }

// 	for _, b := range books {
// 		fmt.Printf("+[%d, %d]\n", b[0], b[1])
// 		r := mc.Book2(b[0], b[1])
// 		fmt.Printf("%d\n%v\n%v\n\n", r, mc.M, mc.Mkeys)
// 	}
// }
